### Set up the prompt

## Prompt „ÅÆ ÁµÑËæºTheme
## ÁµÑËæºTheme„Çí‰Ωø„ÅÜ„Åü„ÇÅ„ÅÆÂàùÊúüÂåñ
autoload -Uz promptinit
promptinit
## ÁµÑËæºTheme
# prompt adam1 plain ${col} ${col}
# prompt suse
# prompt redhat

## Sample
## Default
# PROMPT='%m%# '
## suse
# PROMPT='%n@%m:%~/ > '
## redhat
# [%n@%m %1~]%(#.#.$)
# suse redhat
# PROMPT2='> '
## Default
# PROMPT3='?# '
# PROMPT4='+%N:%i> '
# SPROMPT='zsh: correct '%R' to '%r' [nyae]? '

### Host„Å´„Çà„Å£„Å¶Prompt„ÅÆËâ≤„ÇíÂ§âÊõ¥
## Method 1
## bashrc„ÇíÂèÇËÄÉ
# case "$HOST" in
#     sing*)   col=32 ;;
#     leap*)   col=36 ;;
#     drive*)  col=31 ;;
#     box*)    col=35 ;;
#     ride*)   col=33 ;;
#     debian*) col=   ;;
#     *)       col=   ;;
# esac
# col_begin=%{[${col}m%}
# col_end=%{[m%}

## Method 2
#0:black, 1:red, 2:green, 3:yellow,
#4:blue, 5:magenta, 6:cyan, 7:white
case "$HOST" in
    sing*)             col=green   ;;
    leap*)             col=cyan    ;;
    drive*)            col=red     ;;
    box*)              col=magenta ;;
    ride*)             col=yellow  ;;
    debian*)           col=        ;;
    *PC)               col=        ;;
    h24?)              col=        ;;
    xe-000? | ap-000?) col=        ;;
    *)       col=        ;;
esac
autoload colors
colors
col_begin=%{${fg[${col}]}%}
col_end=%{${reset_color}%}

## suse Base
PROMPT="${col_begin}%m${col_end}:%~ > "
# PROMPT="${col_begin}%n${col_end}@${col_begin}%m${col_end}:%~ > "
## PROMPT='%n@%m:%~ > ' # Default
PROMPT2='> '
PROMPT3='?# '
PROMPT4='+%N:%i> '
SPROMPT='zsh: correct '%R' to '%r' [nyae]? '
# RPROMPT=

### Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

### Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=10000
SAVEHIST=$HISTSIZE
HISTFILE=~/.zsh_history

fpath=(~/.autojump/functions ~/.zsh/functions/Completion ~/.zsh/site-functions $fpath)
## fpath„ÅØcompinit„ÅÆÂâç„Å´ÂÆöÁæ©
## Linux
## ln -s ~/.rbenv/completions/rbenv.zsh ~/.zsh/site-functions/_rbenv
## Mac
## ln -s /usr/local/Library/Contributions/brew_zsh_completion.zsh ~/.zsh/site-functions/_brew
## ln -s `brew --prefix rbenv`/completions/rbenv.zsh ~/.zsh/site-functions/_rbenv

### Use modern completion system
autoload -Uz compinit
## -u„ÅØPermission ErrorÂõûÈÅø
compinit -u

###
zstyle ':completion:*' auto-description 'specify: %d'
### Ë£úÂÆå„ÇíÊåáÂÆö„Åó„ÅüÈ†ÜÁï™„Å´ÂÆüË°å
# zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' completer _oldlist _expand _complete _match _history _ignored _correct _approximate _prefix
### Ë£úÂÆåÂÄôË£ú„ÅÆGroupÂåñ
zstyle ':completion:*' format '%B[Completing %d]%b'
zstyle ':completion:*' group-name ''
### Ë£úÂÆåÂÄôË£ú„ÅÆMenuÂåñ
# zstyle ':completion:*' menu select=2
zstyle ':completion:*:default' menu select=1
### enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    eval "$(dircolors -b)"
fi
### Ë£úÂÆåÂÄôË£ú„Å´Ëâ≤„Çí‰ªò„Åë„Çã
if [ -n "$LS_COLORS" ]; then
    zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
else
    zstyle ':completion:*:default' list-colors ''
fi
###
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
### Ë£úÂÆåÂÄôË£ú„Åå„Å™„Åë„Çå„Å∞ÊõñÊòß„Å´ÂÄôË£ú
### m:{a-z}={A-Z}: Â∞èÊñáÂ≠ó„ÇíÂ§ßÊñáÂ≠ó„Å´Â§â„Åà„Åü„ÇÇ„ÅÆ„Åß„ÇÇË£úÂÆå„Åô„Çã„ÄÇ
### r:|[._-]=*: „Äå.„Äç„Äå_„Äç„Äå-„Äç„ÅÆÂâç„Å´„ÉØ„Ç§„É´„Éâ„Ç´„Éº„Éâ„Äå*„Äç„Åå„ÅÇ„Çã„ÇÇ„ÅÆ„Å®„Åó„Å¶Ë£úÂÆå
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
###
zstyle ':completion:*' menu select=long
###
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
###
zstyle ':completion:*' use-compctl false
### Ë©≥Á¥∞„Å™ÊÉÖÂ†±
zstyle ':completion:*' verbose true
###
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

#####
### Key Bind
bindkey '^[p' history-beginning-search-backward
bindkey '^[n' history-beginning-search-forward
## ^s, ^q„ÇíÁÑ°Âäπ
# setopt no_flow_control
### History
## Âêå„Åò„Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥„ÇíÈÄ£Á∂ö„ÅßÂÆüË°å„Åó„ÅüÂ†¥Âêà„ÅØHistory„Å´ÁôªÈå≤„Åó„Å™„ÅÑ
setopt hist_ignore_dups
## zsh„Éó„É≠„Çª„ÇπÈñì„ÅßHistory„ÇíÂÖ±Êúâ
setopt share_history
## ÂÆüË°åÊôÇÂàª„ÇÇ‰øùÂ≠ò
# setopt extended_history
## „Åô„Åê„Å´History„Å´ËøΩË®ò
# setopt inc_append_histor
## „Éó„É≠„Çª„ÇπÊåáÂÆö„Åß„ÅØ„É°„Éã„É•„ÉºÈÅ∏Êäû
#zstyle ':completion:*:processes' menu yes select=2
## DirectoryÂêç„Åßcd
setopt auto_cd
## cd„ÅÆÂ±•Ê≠¥
setopt auto_pushd pushd_ignore_dups
## Command„ÇíËá™ÂãïË®ÇÊ≠£
setopt correct
##
# setopt correct_all
# Ë£úÂÆåÂÄôË£ú„ÇíË©∞„ÇÅ„Å¶Ë°®Á§∫
# setopt list_packed
## AliasÂ±ïÈñãÂâç„ÇÇ„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Å¶Ë£úÂÆå
# setopt complete_aliases

## BeepÈü≥„ÇíÊ∂à„Åô
setopt no_beep
## Ë£úÂÆåÂÄôË£ú‰∏ÄË¶ß„Åß„Éï„Ç°„Ç§„É´„ÅÆÁ®ÆÂà•„Çí„Éû„Éº„ÇØË°®Á§∫
# setopt list_types
## TAB „ÅßÈ†Ü„Å´Ë£úÂÆåÂÄôË£ú„ÇíÂàá„ÇäÊõø„Åà„Çã
# setopt auto_menu
## Ë£úÂÆåÂÄôË£ú„Çí‰∏ÄË¶ßË°®Á§∫
# setopt auto_list
##
# setopt notify
## Ë£úÂÆåÊôÇ„Å´History„ÇíËá™ÂãïÁöÑ„Å´Â±ïÈñã
# setopt hist_expand
## --prefix=Á≠â„Åß„ÇÇ=„ÅÆÂæå„ÇíÂ±ïÈñã
# setopt magic_equal_subst
## ÂÖàÊñπÊ§úÁ¥¢
# autoload predict-on
# predict-on
## ÈáçË§á„Åó„ÅüPATH„ÇíÁôªÈå≤„Åó„Å™„ÅÑ
# typeset -U path

## „Ç´„Éº„ÇΩ„É´‰ΩçÁΩÆ„ÅßË£úÂÆå
# setopt complete_in_word
## glob„ÇíÂ±ïÈñã„Åó„Å™„ÅÑ„ÅßÂÄôË£ú„ÅÆ‰∏ÄË¶ß„Åã„ÇâË£úÂÆå
#setopt glob_complete
##
# setopt extended_glob


## env
[ -f ~/.bash_env ] && . ~/.bash_env


## Alias
[ -f ~/.zsh_aliases ] && . ~/.zsh_aliases


### Plugin
if [ -d ~/.zsh/plugin ]; then

    ## zaw
    . ~/.zsh/plugin/zaw/zaw.zsh
    # bindkey '^xh' zaw-history

    ## auto-fu
    # . ~/.zsh/plugin/auto-fu.zsh/auto-fu.zsh
    # function zle-line-init () {
    #     auto-fu-init
    # }
    # zle -N zle-line-init

fi

### percol
if which percol > /dev/null ; then
    if [ -x "`which gtac 2> /dev/null`" -o -x "`which tac 2> /dev/null`" ]; then

        function percol_select_history() {
            local tac
            if which gtac > /dev/null 2>&1 ; then
                tac=gtac
            else
                tac=tac
            fi
            BUFFER=$($tac $HISTFILE | sed 's/^: [0-9]*:[0-9]*;//' | percol --query "$LBUFFER")
            CURSOR=$#BUFFER         # move cursor
            zle -R -c               # refresh
        }
        zle -N percol_select_history
        bindkey '^[r' percol_select_history
    fi
fi


## TODO: 256 Color
case "$TERM" in
    xterm*)
        case "`uname`" in
            Linux) TERM=xterm-256color ;;
            *) ;;
        esac
        ;;
    *) ;;
esac

### Functions

### Screen„ÅÆHardStatus„ÅÆË°®Á§∫
case "$TERM" in
    screen)
        ## ÂÆüË°å‰∏≠„ÅÆCommand
        preexec() {
            echo -ne "\ek#${1%% *}\e\\"
        }
        ## Current Directory
        precmd() {
            echo -ne "\ek$(basename $(pwd))$\e\\"
        }
        ;;
    *) ;;
esac

## ^„Åßcd ..
function cdup() {
    echo
    cd ..
    zle reset-prompt
}
zle -N cdup
bindkey '\^' cdup
